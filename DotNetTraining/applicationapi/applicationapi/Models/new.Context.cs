//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace applicationapi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class newtravelbookingsystemEntities : DbContext
    {
        public newtravelbookingsystemEntities()
            : base("name=newtravelbookingsystemEntities")
        {
            //this.Configuration.ProxyCreationEnabled = false; // ADD THIS LINE !
        }
        

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TravelRequest> TravelRequests { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Usertype> Usertypes { get; set; }
    
        public virtual ObjectResult<employeelist_Result> employeelist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<employeelist_Result>("employeelist");
        }
    
        public virtual ObjectResult<pendingtable_Result> pendingtable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pendingtable_Result>("pendingtable");
        }
    
        public virtual ObjectResult<sp_Storeprocuser_Result> sp_Storeprocuser(Nullable<int> requestid, Nullable<System.DateTime> requestDate, string fromlocation, string toLocation, Nullable<int> userid, string currentStatus, string option)
        {
            var requestidParameter = requestid.HasValue ?
                new ObjectParameter("Requestid", requestid) :
                new ObjectParameter("Requestid", typeof(int));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(System.DateTime));
    
            var fromlocationParameter = fromlocation != null ?
                new ObjectParameter("fromlocation", fromlocation) :
                new ObjectParameter("fromlocation", typeof(string));
    
            var toLocationParameter = toLocation != null ?
                new ObjectParameter("ToLocation", toLocation) :
                new ObjectParameter("ToLocation", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            var currentStatusParameter = currentStatus != null ?
                new ObjectParameter("currentStatus", currentStatus) :
                new ObjectParameter("currentStatus", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Storeprocuser_Result>("sp_Storeprocuser", requestidParameter, requestDateParameter, fromlocationParameter, toLocationParameter, useridParameter, currentStatusParameter, optionParameter);
        }
    }
}
